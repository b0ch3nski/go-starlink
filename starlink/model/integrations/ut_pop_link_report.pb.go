// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v6.30.1
// source: spacex_api/telemetron/public/integrations/ut_pop_link_report.proto

package utpoplink

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	telemetron "github.com/b0ch3nski/go-starlink/starlink/model/telemetron"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RateLimitReason int32

const (
	RateLimitReason_UNKNOWN           RateLimitReason = 0
	RateLimitReason_NO_LIMIT          RateLimitReason = 1
	RateLimitReason_POLICY_LIMIT      RateLimitReason = 2
	RateLimitReason_USER_CUSTOM_LIMIT RateLimitReason = 3
	RateLimitReason_OVERAGE_LIMIT     RateLimitReason = 5
)

// Enum value maps for RateLimitReason.
var (
	RateLimitReason_name = map[int32]string{
		0: "UNKNOWN",
		1: "NO_LIMIT",
		2: "POLICY_LIMIT",
		3: "USER_CUSTOM_LIMIT",
		5: "OVERAGE_LIMIT",
	}
	RateLimitReason_value = map[string]int32{
		"UNKNOWN":           0,
		"NO_LIMIT":          1,
		"POLICY_LIMIT":      2,
		"USER_CUSTOM_LIMIT": 3,
		"OVERAGE_LIMIT":     5,
	}
)

func (x RateLimitReason) Enum() *RateLimitReason {
	p := new(RateLimitReason)
	*p = x
	return p
}

func (x RateLimitReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RateLimitReason) Descriptor() protoreflect.EnumDescriptor {
	return file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_enumTypes[0].Descriptor()
}

func (RateLimitReason) Type() protoreflect.EnumType {
	return &file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_enumTypes[0]
}

func (x RateLimitReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RateLimitReason.Descriptor instead.
func (RateLimitReason) EnumDescriptor() ([]byte, []int) {
	return file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_rawDescGZIP(), []int{0}
}

type UtPoPLinkReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotTimestamp *telemetron.TimestampInfo `protobuf:"bytes,1,opt,name=slot_timestamp,json=slotTimestamp,proto3" json:"slot_timestamp,omitempty"`
	PopId         uint32                    `protobuf:"varint,2,opt,name=pop_id,json=popId,proto3" json:"pop_id,omitempty"`
	// Deprecated: Marked as deprecated in spacex_api/telemetron/public/integrations/ut_pop_link_report.proto.
	PopRackId     uint32            `protobuf:"varint,3,opt,name=pop_rack_id,json=popRackId,proto3" json:"pop_rack_id,omitempty"`
	Stats         []*UtPoPLinkStats `protobuf:"bytes,4,rep,name=stats,proto3" json:"stats,omitempty"`
	PopVersion    string            `protobuf:"bytes,5,opt,name=pop_version,json=popVersion,proto3" json:"pop_version,omitempty"`
	InstanceIndex uint32            `protobuf:"varint,6,opt,name=instance_index,json=instanceIndex,proto3" json:"instance_index,omitempty"`
}

func (x *UtPoPLinkReport) Reset() {
	*x = UtPoPLinkReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UtPoPLinkReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UtPoPLinkReport) ProtoMessage() {}

func (x *UtPoPLinkReport) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UtPoPLinkReport.ProtoReflect.Descriptor instead.
func (*UtPoPLinkReport) Descriptor() ([]byte, []int) {
	return file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_rawDescGZIP(), []int{0}
}

func (x *UtPoPLinkReport) GetSlotTimestamp() *telemetron.TimestampInfo {
	if x != nil {
		return x.SlotTimestamp
	}
	return nil
}

func (x *UtPoPLinkReport) GetPopId() uint32 {
	if x != nil {
		return x.PopId
	}
	return 0
}

// Deprecated: Marked as deprecated in spacex_api/telemetron/public/integrations/ut_pop_link_report.proto.
func (x *UtPoPLinkReport) GetPopRackId() uint32 {
	if x != nil {
		return x.PopRackId
	}
	return 0
}

func (x *UtPoPLinkReport) GetStats() []*UtPoPLinkStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *UtPoPLinkReport) GetPopVersion() string {
	if x != nil {
		return x.PopVersion
	}
	return ""
}

func (x *UtPoPLinkReport) GetInstanceIndex() uint32 {
	if x != nil {
		return x.InstanceIndex
	}
	return 0
}

type UtPoPLinkStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeasurementTimestamp                   *telemetron.TimestampInfo `protobuf:"bytes,1,opt,name=measurement_timestamp,json=measurementTimestamp,proto3" json:"measurement_timestamp,omitempty"`
	UtId                                   string                    `protobuf:"bytes,2,opt,name=ut_id,json=utId,proto3" json:"ut_id,omitempty"`
	PopRxSduCnt                            int64                     `protobuf:"varint,3,opt,name=pop_rx_sdu_cnt,json=popRxSduCnt,proto3" json:"pop_rx_sdu_cnt,omitempty"`
	SduLossCnt                             int64                     `protobuf:"varint,4,opt,name=sdu_loss_cnt,json=sduLossCnt,proto3" json:"sdu_loss_cnt,omitempty"`
	UplinkBytesLast_15S                    uint64                    `protobuf:"varint,5,opt,name=uplink_bytes_last_15s,json=uplinkBytesLast15s,proto3" json:"uplink_bytes_last_15s,omitempty"`
	DownlinkBytesLast_15S                  uint64                    `protobuf:"varint,6,opt,name=downlink_bytes_last_15s,json=downlinkBytesLast15s,proto3" json:"downlink_bytes_last_15s,omitempty"`
	UplinkCplaneAclOtherViolationsLast_15S uint64                    `protobuf:"varint,7,opt,name=uplink_cplane_acl_other_violations_last_15s,json=uplinkCplaneAclOtherViolationsLast15s,proto3" json:"uplink_cplane_acl_other_violations_last_15s,omitempty"`
}

func (x *UtPoPLinkStats) Reset() {
	*x = UtPoPLinkStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UtPoPLinkStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UtPoPLinkStats) ProtoMessage() {}

func (x *UtPoPLinkStats) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UtPoPLinkStats.ProtoReflect.Descriptor instead.
func (*UtPoPLinkStats) Descriptor() ([]byte, []int) {
	return file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_rawDescGZIP(), []int{1}
}

func (x *UtPoPLinkStats) GetMeasurementTimestamp() *telemetron.TimestampInfo {
	if x != nil {
		return x.MeasurementTimestamp
	}
	return nil
}

func (x *UtPoPLinkStats) GetUtId() string {
	if x != nil {
		return x.UtId
	}
	return ""
}

func (x *UtPoPLinkStats) GetPopRxSduCnt() int64 {
	if x != nil {
		return x.PopRxSduCnt
	}
	return 0
}

func (x *UtPoPLinkStats) GetSduLossCnt() int64 {
	if x != nil {
		return x.SduLossCnt
	}
	return 0
}

func (x *UtPoPLinkStats) GetUplinkBytesLast_15S() uint64 {
	if x != nil {
		return x.UplinkBytesLast_15S
	}
	return 0
}

func (x *UtPoPLinkStats) GetDownlinkBytesLast_15S() uint64 {
	if x != nil {
		return x.DownlinkBytesLast_15S
	}
	return 0
}

func (x *UtPoPLinkStats) GetUplinkCplaneAclOtherViolationsLast_15S() uint64 {
	if x != nil {
		return x.UplinkCplaneAclOtherViolationsLast_15S
	}
	return 0
}

var File_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto protoreflect.FileDescriptor

var file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_rawDesc = []byte{
	0x0a, 0x42, 0x73, 0x70, 0x61, 0x63, 0x65, 0x78, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x74, 0x72, 0x6f, 0x6e, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x75, 0x74, 0x5f, 0x70,
	0x6f, 0x70, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x29, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49,
	0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x6f, 0x6e, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x78, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x6f, 0x6e, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xc0, 0x02, 0x0a, 0x0f, 0x55, 0x74, 0x50, 0x6f, 0x50, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x59, 0x0a, 0x0e, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74,
	0x72, 0x6f, 0x6e, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0d, 0x73, 0x6c, 0x6f, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x15,
	0x0a, 0x06, 0x70, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x70, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0b, 0x70, 0x6f, 0x70, 0x5f, 0x72, 0x61, 0x63,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x02, 0x18, 0x01, 0x52, 0x09,
	0x70, 0x6f, 0x70, 0x52, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x6f, 0x6e,
	0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x55, 0x74, 0x50, 0x6f, 0x50, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f,
	0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x6f, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x22, 0x9b, 0x03, 0x0a, 0x0e, 0x55, 0x74, 0x50, 0x6f, 0x50, 0x4c, 0x69, 0x6e, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x67, 0x0a, 0x15, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50,
	0x49, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x6f, 0x6e, 0x2e, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x14, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x13,
	0x0a, 0x05, 0x75, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0e, 0x70, 0x6f, 0x70, 0x5f, 0x72, 0x78, 0x5f, 0x73, 0x64,
	0x75, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x6f, 0x70,
	0x52, 0x78, 0x53, 0x64, 0x75, 0x43, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x64, 0x75, 0x5f,
	0x6c, 0x6f, 0x73, 0x73, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x73, 0x64, 0x75, 0x4c, 0x6f, 0x73, 0x73, 0x43, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x75, 0x70,
	0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x31, 0x35, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x75, 0x70, 0x6c, 0x69, 0x6e,
	0x6b, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4c, 0x61, 0x73, 0x74, 0x31, 0x35, 0x73, 0x12, 0x35, 0x0a,
	0x17, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x31, 0x35, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4c, 0x61, 0x73,
	0x74, 0x31, 0x35, 0x73, 0x12, 0x5a, 0x0a, 0x2b, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x63,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x5f, 0x61, 0x63, 0x6c, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f,
	0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x31, 0x35, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x25, 0x75, 0x70, 0x6c, 0x69, 0x6e,
	0x6b, 0x43, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x41, 0x63, 0x6c, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x56,
	0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x61, 0x73, 0x74, 0x31, 0x35, 0x73,
	0x2a, 0x85, 0x01, 0x0a, 0x0f, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x01, 0x12,
	0x10, 0x0a, 0x0c, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10,
	0x02, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d,
	0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x56, 0x45, 0x52,
	0x41, 0x47, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x05, 0x22, 0x04, 0x08, 0x04, 0x10,
	0x04, 0x2a, 0x15, 0x48, 0x49, 0x47, 0x48, 0x5f, 0x48, 0x4f, 0x55, 0x52, 0x4c, 0x59, 0x5f, 0x41,
	0x56, 0x47, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x42, 0x39, 0x5a, 0x37, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x78, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x6f, 0x6e, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x75, 0x74, 0x70, 0x6f, 0x70, 0x6c,
	0x69, 0x6e, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_rawDescOnce sync.Once
	file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_rawDescData = file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_rawDesc
)

func file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_rawDescGZIP() []byte {
	file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_rawDescOnce.Do(func() {
		file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_rawDescData = protoimpl.X.CompressGZIP(file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_rawDescData)
	})
	return file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_rawDescData
}

var file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_goTypes = []interface{}{
	(RateLimitReason)(0),             // 0: SpaceX.API.Telemetron.Public.Integrations.RateLimitReason
	(*UtPoPLinkReport)(nil),          // 1: SpaceX.API.Telemetron.Public.Integrations.UtPoPLinkReport
	(*UtPoPLinkStats)(nil),           // 2: SpaceX.API.Telemetron.Public.Integrations.UtPoPLinkStats
	(*telemetron.TimestampInfo)(nil), // 3: SpaceX.API.Telemetron.Public.Common.TimestampInfo
}
var file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_depIdxs = []int32{
	3, // 0: SpaceX.API.Telemetron.Public.Integrations.UtPoPLinkReport.slot_timestamp:type_name -> SpaceX.API.Telemetron.Public.Common.TimestampInfo
	2, // 1: SpaceX.API.Telemetron.Public.Integrations.UtPoPLinkReport.stats:type_name -> SpaceX.API.Telemetron.Public.Integrations.UtPoPLinkStats
	3, // 2: SpaceX.API.Telemetron.Public.Integrations.UtPoPLinkStats.measurement_timestamp:type_name -> SpaceX.API.Telemetron.Public.Common.TimestampInfo
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_init() }
func file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_init() {
	if File_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UtPoPLinkReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UtPoPLinkStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_goTypes,
		DependencyIndexes: file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_depIdxs,
		EnumInfos:         file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_enumTypes,
		MessageInfos:      file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_msgTypes,
	}.Build()
	File_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto = out.File
	file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_rawDesc = nil
	file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_goTypes = nil
	file_spacex_api_telemetron_public_integrations_ut_pop_link_report_proto_depIdxs = nil
}
